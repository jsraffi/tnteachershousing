@model tnteachershousing.ViewModel.ReceiptsViewModel

@{
    ViewBag.Title = "CreateReceipts";
    Layout = "~/Views/Shared/_AdminLayout.cshtml";
}
<div class="col-md-6">
    <div class="box box-info">
        <div class="box-header with-border">
            <h3 class="box-title formheader">Create Receipts Form</h3>
        </div><!-- /.box-header -->
        @using (Html.BeginForm("CreateReceipts","Admin",FormMethod.Post, new { @class = "form-horizontal", role = "form" }))
        {
            @Html.AntiForgeryToken()

                @Html.ValidationSummary(true, "", new { @class = "text-danger" })
            <div class="box-body">
                <div class="form-group">
                    @Html.LabelFor(model => model.CustomerRefID, htmlAttributes: new { @class = "control-label col-md-3" })
                    <div class="col-md-9">
                        @Html.EditorFor(model => model.CustomerRefID, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
                        @Html.ValidationMessageFor(model => model.CustomerRefID, "", new { @class = "text-danger" })
                    </div>
                </div>


                <div class="form-group">
                    @Html.LabelFor(model => model.Remarks, htmlAttributes: new { @class = "control-label col-md-3" })
                    <div class="col-md-9">
                        @Html.EditorFor(model => model.Remarks, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Remarks, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.CashChequeDD, htmlAttributes: new { @class = "control-label col-md-3" })
                    <div class="col-md-9">
                        @Html.EditorFor(model => model.CashChequeDD, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.CashChequeDD, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.ChequeNumber, htmlAttributes: new { @class = "control-label col-md-3" })
                    <div class="col-md-9">
                        @Html.EditorFor(model => model.ChequeNumber, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.ChequeNumber, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.ChequeDate, htmlAttributes: new { @class = "control-label col-md-3" })
                    <div class="col-md-9">
                        <div class='input-group date' data-provide="datepicker" id="chequedate" data-date-format="dd/mm/yyyy" data-date-orientation="bottom" data-date-autoclose="true">
                            @Html.EditorFor(model => model.ChequeDate ,new { htmlAttributes = new { @class = "form-control" } })
                            <span class="input-group-addon">
                                <span class="fa fa-calendar"></span>
                            </span>
                            
                        </div>
                        @Html.ValidationMessageFor(model => model.ChequeDate, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.BankName, htmlAttributes: new { @class = "control-label col-md-3" })
                    <div class="col-md-9">
                        @Html.EditorFor(model => model.BankName, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.BankName, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.BankBranch, htmlAttributes: new { @class = "control-label col-md-3" })
                    <div class="col-md-9">
                        @Html.EditorFor(model => model.BankBranch, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.BankBranch, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.Amount, htmlAttributes: new { @class = "control-label col-md-3" })
                    <div class="col-md-9">
                        @Html.EditorFor(model => model.Amount, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Amount, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.CreationDate, htmlAttributes: new { @class = "control-label col-md-3" })
                    <div class="col-md-9">
                        <div class='input-group date' data-provide="datepicker" id="chequedate" data-date-format="dd/mm/yyyy" data-date-orientation="bottom" data-date-autoclose="true">
                            @Html.EditorFor(model => model.CreationDate, new { htmlAttributes = new { @class = "form-control" } })
                            <span class="input-group-addon">
                                <span class="fa fa-calendar"></span>
                            </span>
                        </div>
                        @Html.ValidationMessageFor(model => model.CreationDate, "", new { @class = "text-danger" })
                    </div>
                </div>

            </div>
                <div class="box-footer">
                    <div class="form-group">
                        <div class="col-md-offset-2 col-md-10">
                            <input type="submit" value="Add Receipt " class="btn btn-bitbucket pull-right" />
                        </div>
                    </div>
                </div>
        }

        </div>
</div>
@section scripts
{
    @Scripts.Render("~/bundles/globalize")
    @Scripts.Render("~/bundles/datepicker")


<script type="text/javascript">
    $(document).ready(function () {

        $.culture = Globalize.culture("en-GB");
        $.validator.methods.date = function (value, element) {
            //This is not ideal but Chrome passes dates through in ISO1901 format regardless of locale 
            //and despite displaying in the specified format.

            return this.optional(element)
                || Globalize.parseDate(value, "dd/MM/yyyy", "en-GB")
                
        }
        
    });
</script>
}