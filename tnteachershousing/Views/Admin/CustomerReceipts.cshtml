@model tnteachershousing.ViewModel.ReceiptsViewModel

@{
    ViewBag.Title = "CreateReceipts";
    Layout = "~/Views/Shared/_Layout.cshtml";
    ViewBag.PageInfo = "Payment gateway";
}
<link href="~/Content/Admin/css/AdminLTE.css" rel="stylesheet" />
<link href="~/Content/Admin/css/skin-blue.css" rel="stylesheet"/>
<link href="~/Content/Admin/css/Site.css" rel="stylesheet" />
<link href="~/Content/bootstrap-datepicker3.css" rel="stylesheet" />
<style>
.validation-summary-errors ul 
{
    margin-top:15px;
    padding-left:100px;
}
.formheader
{
  padding-left:100px;
}
</style>

    <div class="content row">
        <div class="col-md-7">
            <div class="box box-info" style="border:2px solid lightblue">
                <div class="box-header with-border">
                    <h3 class="box-title formheader">Online payment</h3>
                </div><!-- /.box-header -->

                @using (Html.BeginForm("CustomerReceipts", "Admin", FormMethod.Post, new { @class = "form-horizontal", role = "form", autocomplete = "off" }))
            {
            @Html.AntiForgeryToken()

            @Html.ValidationSummary(true, "", new { @class = "text-danger" })

            <div class="box-body">
                <div class="form-group">
                    @Html.LabelFor(model => model.CustomerRefID, htmlAttributes: new { @class = "control-label col-md-3" })
                    <div class="col-md-9">
                        @Html.EditorFor(model => model.CustomerRefID, new { htmlAttributes = new { @class = "form-control", @title = "Please enter a Customer ID and click on Check Customer ID details button(Left bottom) to verify your Customer ID" } })
                        @Html.ValidationMessageFor(model => model.CustomerRefID, "", new { @class = "text-danger" })
                    </div>
                </div>


                <div class="form-group">
                    @Html.LabelFor(model => model.Remarks, htmlAttributes: new { @class = "control-label col-md-3" })
                    <div class="col-md-9">
                        @Html.EditorFor(model => model.Remarks, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Remarks, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.CashChequeDD, htmlAttributes: new { @class = "control-label col-md-3" })
                    <div class="col-md-9">
                        @Html.EditorFor(model => model.CashChequeDD, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.CashChequeDD, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.ChequeNumber, htmlAttributes: new { @class = "control-label col-md-3" })
                    <div class="col-md-9">
                        @Html.EditorFor(model => model.ChequeNumber, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.ChequeNumber, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.ChequeDate, htmlAttributes: new { @class = "control-label col-md-3" })
                    <div class="col-md-9">
                        <div class='input-group date' data-provide="datepicker" id="chequedate" data-date-format="dd/mm/yyyy" data-date-orientation="bottom" data-date-autoclose="true">
                            @Html.EditorFor(model => model.ChequeDate, new { htmlAttributes = new { @class = "form-control" } })
                            <span class="input-group-addon">
                                <span class="fa fa-calendar"></span>
                            </span>

                        </div>
                        @Html.ValidationMessageFor(model => model.ChequeDate, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.BankName, htmlAttributes: new { @class = "control-label col-md-3" })
                    <div class="col-md-9">
                        @Html.EditorFor(model => model.BankName, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.BankName, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.BankBranch, htmlAttributes: new { @class = "control-label col-md-3" })
                    <div class="col-md-9">
                        @Html.EditorFor(model => model.BankBranch, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.BankBranch, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.Amount, htmlAttributes: new { @class = "control-label col-md-3" })
                    <div class="col-md-9">
                        @Html.EditorFor(model => model.Amount, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Amount, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.CreationDate, htmlAttributes: new { @class = "control-label col-md-3" })
                    <div class="col-md-9">
                        @Html.EditorFor(model => model.CreationDate, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.CreationDate, "", new { @class = "text-danger" })
                    </div>
                </div>

            </div>


            <div class="box-footer">
                <div class="form-group">
                    <div class="col-md-offset-2 col-md-10">
                        <input type="submit" value="Make payment" class="btn btn-bitbucket pull-right" />
                        <input type="button" value="Check Customer ID details" id="getCustomerDetails" class="btn btn-bitbucket pull-left" />
                    </div>
                </div>
            </div>
            }

            </div>
</div>
            <div style="margin-top:30px;padding-left:5em;" class="col-md-5">
                <table id="CustDetailTable" class="table-bordered table-striped custreceipttable" width="500">

                    <tbody></tbody>
                </table>
            </div>
        </div>




@section scripts
{
   
    @Scripts.Render("~/bundles/jqueryval")
    @Scripts.Render("~/bundles/globalize")
    @Scripts.Render("~/bundles/datepicker")



<script type="text/javascript">
    $(document).ready(function () {

        $.culture = Globalize.culture("en-GB");
        $.validator.methods.date = function (value, element) {
            //This is not ideal but Chrome passes dates through in ISO1901 format regardless of locale 
            //and despite displaying in the specified format.

            return this.optional(element)
                || Globalize.parseDate(value, "dd/MM/yyyy", "en-GB")
                
        }

       
        
    });
    $("#getCustomerDetails").click(function () {
        var CustID = $("#CustomerRefID").val();
        $.getJSON('@Url.Action("GetCustomerInfo","Admin")', { applicationid: CustID }, function (data) {
            $('#CustDetailTable tbody').remove();
            var tr;
            if (data.length == 0)
            {   
                tr = $('<tbody>');
                tr.append("<tr><td> Invalid Customer ID</td></tr>")
                $("#CustDetailTable").append(tr);
            }
            for (var i = 0; i < data.length; i++) {
                tr = $('<tbody/>');
                tr.append("<tr><td> Customer Details </td></tr>");
                tr.append("<tr><td>" + data[i].Name + "</td></tr>");
                tr.append("<tr><td>" + data[i].Relatedto + "</td></tr>");
                tr.append("<tr><td>" + data[i].Address + "</td></tr>");
                tr.append("<tr><td>" + data[i].City + "</td></tr>");
                tr.append("<tr><td>" + data[i].State + "</td></tr>");
                $("#CustDetailTable").append(tr);
            }

        });
    });
</script>
}